{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nvar UserContext = React.createContext({\n  showLogin: false\n});\nexport var Provider = function Provider(props) {\n  _s();\n\n  var _useState = useState({\n    showLogin: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var toggleLogin = function toggleLogin() {\n    var showLogin = state.showLogin;\n    setState({\n      showLogin: !showLogin\n    });\n  };\n\n  return __jsx(UserContext.Provider, {\n    value: {\n      state: state,\n      toggleLogin: toggleLogin\n    }\n  }, props.children);\n};\n\n_s(Provider, \"kEhD7O7yqGNaMB1/qLgeRVJbu2Q=\");\n\n_c = Provider;\nexport var Consumer = UserContext.Consumer;\nexport default UserContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["E:/work/next-express/New folder/context/LoginContext.js"],"names":["React","useState","UserContext","createContext","showLogin","Provider","props","state","setState","toggleLogin","children","Consumer"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,IAAMC,WAAW,GAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,SAAS,EAAE;AAD2B,CAApB,CAApB;AAIA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA;;AACjC,kBAA0BL,QAAQ,CAAC;AAAEG,IAAAA,SAAS,EAAE;AAAb,GAAD,CAAlC;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAQL,SAAR,GAAsBG,KAAtB,CAAQH,SAAR;AACAI,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,SAAS,EAAE,CAACA;AAAd,KAAD,CAAR;AACD,GAHD;;AAKA,SACE,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAALA,KAAF;AAASE,MAAAA,WAAW,EAAXA;AAAT;AAA7B,KACGH,KAAK,CAACI,QADT,CADF;AAKD,CAbM;;GAAML,Q;;KAAAA,Q;AAcb,OAAO,IAAMM,QAAQ,GAAGT,WAAW,CAACS,QAA7B;AAEP,eAAeT,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst UserContext = React.createContext({\n  showLogin: false,\n});\n\nexport const Provider = (props) => {\n  const [state, setState] = useState({ showLogin: false });\n\n  const toggleLogin = () => {\n    const { showLogin } = state;\n    setState({ showLogin: !showLogin });\n  };\n\n  return (\n    <UserContext.Provider value={{ state, toggleLogin }}>\n      {props.children}\n    </UserContext.Provider>\n  );\n};\nexport const Consumer = UserContext.Consumer;\n\nexport default UserContext;\n"]},"metadata":{},"sourceType":"module"}