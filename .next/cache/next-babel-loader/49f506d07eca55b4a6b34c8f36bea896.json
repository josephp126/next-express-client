{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport BankList from \"../Data/BankList\";\nimport ChooseProfile from \"../components/Register/chooseProfile\";\nimport PersonalReg from \"../components/Register/PersonalReg\";\nimport CompanyReg from \"../components/Register/CompanyReg\";\nvar emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nvar phoneRegex = RegExp(/^[0-9\\b]+$/);\n\nvar Register = function Register(props) {\n  _s();\n\n  var _useState = useState(false),\n      isAccountSelect = _useState[0],\n      setIsAccountSelect = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      profile = _useState2[0],\n      setProfile = _useState2[1];\n\n  var _useState3 = useState({\n    firstName: \"\",\n    secondName: \"\",\n    lastName: \"\",\n    password: \"\",\n    birthDate: \"\",\n    email: \"\",\n    phone: \"\",\n    nationality: \"Afghanistan\",\n    doctype: \"DNI\",\n    dni: \"\",\n    motherLastName: \"\",\n    bankName: \"BCP\",\n    nickname: \"\",\n    accountNumber: \"\",\n    type: BankList[0],\n    accountType: \"Personal\",\n    currency: \"Soles\",\n    profile: \"\",\n    formErrors: {\n      firstName: \"\",\n      secondName: \"\",\n      lastName: \"\",\n      password: \"\",\n      birthDate: \"\",\n      email: \"\",\n      phone: \"\",\n      nationality: \"\",\n      dni: \"\",\n      doctype: \"\",\n      motherLastName: \"\",\n      bankName: \"\",\n      nickname: \"\",\n      accountNumber: \"\",\n      type: \"\",\n      currency: \"\"\n    }\n  }),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var handleChange = function handleChange(input) {\n    return function (event) {\n      var value = event.target.value;\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, input, value)));\n    };\n  };\n\n  var step = state.step,\n      formErrors = state.formErrors;\n  var firstName = state.firstName,\n      secondName = state.secondName,\n      lastName = state.lastName,\n      password = state.password,\n      birthDate = state.birthDate,\n      email = state.email,\n      phone = state.phone,\n      nationality = state.nationality,\n      motherLastName = state.motherLastName,\n      dni = state.dni,\n      accountType = state.accountType,\n      doctype = state.doctype;\n  var values = {\n    firstName: firstName,\n    secondName: secondName,\n    lastName: lastName,\n    password: password,\n    birthDate: birthDate,\n    email: email,\n    phone: phone,\n    nationality: nationality,\n    motherLastName: motherLastName,\n    dni: dni,\n    accountType: accountType,\n    doctype: doctype\n  }; // if (isAccountSelect === false) {\n  //   return (\n  //     <Layout>\n  //       <ChooseProfile\n  //         setIsAccountSelect={setIsAccountSelect}\n  //         setProfile={setProfile}\n  //       />\n  //     </Layout>\n  //   );\n  // }\n\n  return __jsx(React.Fragment, null, __jsx(Layout, null, __jsx(\"div\", {\n    className: \"page\",\n    id: \"top\"\n  }, __jsx(PersonalReg, {\n    handleChange: handleChange,\n    values: values,\n    formErrors: formErrors,\n    profile: profile\n  }))));\n};\n\n_s(Register, \"1Cj2n2rz5fosl1yMDiVWSwerFB8=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["E:/work/next-express/client/pages/register.js"],"names":["React","useState","Layout","BankList","ChooseProfile","PersonalReg","CompanyReg","emailRegex","RegExp","phoneRegex","Register","props","isAccountSelect","setIsAccountSelect","profile","setProfile","firstName","secondName","lastName","password","birthDate","email","phone","nationality","doctype","dni","motherLastName","bankName","nickname","accountNumber","type","accountType","currency","formErrors","state","setState","handleChange","input","event","value","target","step","values"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport BankList from \"../Data/BankList\";\nimport ChooseProfile from \"../components/Register/chooseProfile\";\nimport PersonalReg from \"../components/Register/PersonalReg\";\nimport CompanyReg from \"../components/Register/CompanyReg\";\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst phoneRegex = RegExp(/^[0-9\\b]+$/);\n\nconst Register = (props) => {\n  const [isAccountSelect, setIsAccountSelect] = useState(false);\n  const [profile, setProfile] = useState(\"\");\n\n  const [state, setState] = useState({\n    firstName: \"\",\n    secondName: \"\",\n    lastName: \"\",\n    password: \"\",\n    birthDate: \"\",\n    email: \"\",\n    phone: \"\",\n    nationality: \"Afghanistan\",\n    doctype: \"DNI\",\n    dni: \"\",\n    motherLastName: \"\",\n    bankName: \"BCP\",\n    nickname: \"\",\n    accountNumber: \"\",\n    type: BankList[0],\n    accountType: \"Personal\",\n    currency: \"Soles\",\n    profile: \"\",\n\n    formErrors: {\n      firstName: \"\",\n      secondName: \"\",\n      lastName: \"\",\n      password: \"\",\n      birthDate: \"\",\n      email: \"\",\n      phone: \"\",\n      nationality: \"\",\n      dni: \"\",\n      doctype: \"\",\n      motherLastName: \"\",\n      bankName: \"\",\n      nickname: \"\",\n      accountNumber: \"\",\n      type: \"\",\n      currency: \"\",\n    },\n  });\n\n  const handleChange = (input) => (event) => {\n    const { value } = event.target;\n    setState({ ...state, [input]: value });\n  };\n\n  const { step, formErrors } = state;\n  const {\n    firstName,\n    secondName,\n    lastName,\n    password,\n    birthDate,\n    email,\n    phone,\n    nationality,\n    motherLastName,\n    dni,\n    accountType,\n    doctype,\n  } = state;\n  const values = {\n    firstName,\n    secondName,\n    lastName,\n    password,\n    birthDate,\n    email,\n    phone,\n    nationality,\n    motherLastName,\n    dni,\n    accountType,\n    doctype,\n  };\n\n  // if (isAccountSelect === false) {\n  //   return (\n  //     <Layout>\n  //       <ChooseProfile\n  //         setIsAccountSelect={setIsAccountSelect}\n  //         setProfile={setProfile}\n  //       />\n  //     </Layout>\n  //   );\n  // }\n\n  return (\n    <>\n      <Layout>\n        <div className=\"page\" id=\"top\">\n          <PersonalReg\n            handleChange={handleChange}\n            values={values}\n            formErrors={formErrors}\n            profile={profile}\n          />\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}